/*
 * Rational.cpp
 *
 *  Created on: Mar 3, 2015
 *      Author: tom
 */
#include <iostream>
#include "Rational.h"
#include <cmath>

using namespace std;

Rational::Rational() : numerator(0), denominator(1) {
}


Rational::Rational(int num, int denom) : numerator(num), denominator(denom) {
	normalize(numerator, denominator);
}

void Rational::setNumerator(int number){
	numerator = number;
}

int Rational::getNumerator() const{
	return numerator;
}

void Rational::setDenominator(int number){
	denominator = number;
}

int Rational::getDenominator() const{
	return denominator;
}

void Rational::normalize(int num, int denom){

	if(denominator < 0 && numerator > 0){
		numerator = -numerator;
		denominator = abs(denominator);
	}

	else if(denominator < 0 && numerator < 0){
		numerator = abs(numerator);
		denominator = abs(denominator);
	}

	int quotient = gcd(numerator, denominator);

	numerator /= quotient;

	denominator /= quotient;

}

int Rational::gcd(int num, int denom){

	int quotient, largest, smallest, remainder;

	if(num > denom){
		largest = num;
		smallest = denom;
	}
	else{

		largest = denom;

		smallest = num;
	}

	while(largest > smallest){

		remainder = largest % smallest;

		quotient = largest / smallest;

		largest = smallest;

		if(remainder > 0){
			smallest = remainder;
		}

		cout << "Quotient: " << quotient << endl;
	}

	return abs(largest);
}
