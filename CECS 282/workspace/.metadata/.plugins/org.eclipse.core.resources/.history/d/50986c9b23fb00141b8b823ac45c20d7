/*
 * OthelloMove.cpp
 *
 *  Created on: May 5, 2015
 *      Author: tom
 */
#include <iostream>
#include <sstream>
#include <string>
#include <stdexcept>
#include "OthelloMove.h"
#include "GameExceptions.h"
#include "OthelloBoard.h"

using namespace std;

const string PASS = "pass";

int OthelloMove::mOnHeap = 0;

OthelloMove::OthelloMove() : mRow(-1), mCol(-1) {
}

OthelloMove::OthelloMove(int row, int column) : mRow(row), mCol(column) {
}

GameMove& OthelloMove::operator=(const string &input) {

	if (input == "pass") {

		mCol = -1;

		mRow = -1;

	}

	else {

		istringstream iString(input);

		char lParen, rParen, comma;

		iString >> lParen >> mRow >> comma >> mCol >> rParen;

		if (!(OthelloBoard::InBounds(mRow, mCol))) {

			throw GameException("Move is out of bounds");

		}

	}

	return *this;
}

bool OthelloMove::Equals(const GameMove &other) const {

	const OthelloMove &move = dynamic_cast<const OthelloMove &>(other);

	return this->mRow == move.mRow && this->mCol == move.mCol;

}

OthelloMove::operator string() const {

	if (IsPass()) {

		return PASS;

	}

	ostringstream coord;

	coord << "(" << std::to_string(mRow) << "," << std::to_string(mCol) << ")";

	return coord.str();

}

